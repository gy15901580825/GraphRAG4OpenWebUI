
-Goal-
Given a text document that is potentially relevant to this activity, first identify all entities needed from the text in order to capture the information and ideas in the text.
Next, report all relationships among the identified entities.

-Steps-
1. Identify all entities. For each identified entity, extract the following information:
- entity_name: Name of the entity, capitalized
- entity_type: Suggest several labels or categories for the entity. The categories should not be specific, but should be as general as possible.
- entity_description: Comprehensive description of the entity's attributes and activities
Format each entity as ("entity"{tuple_delimiter}<entity_name>{tuple_delimiter}<entity_type>{tuple_delimiter}<entity_description>)

2. From the entities identified in step 1, identify all pairs of (source_entity, target_entity) that are *clearly related* to each other.
For each pair of related entities, extract the following information:
- source_entity: name of the source entity, as identified in step 1
- target_entity: name of the target entity, as identified in step 1
- relationship_description: explanation as to why you think the source entity and the target entity are related to each other
- relationship_strength: a numeric score indicating strength of the relationship between the source entity and target entity
Format each relationship as ("relationship"{tuple_delimiter}<source_entity>{tuple_delimiter}<target_entity>{tuple_delimiter}<relationship_description>{tuple_delimiter}<relationship_strength>)

3. Return output in The primary language of the provided text is **English**. as a single list of all the entities and relationships identified in steps 1 and 2. Use **{record_delimiter}** as the list delimiter.

4. If you have to translate into The primary language of the provided text is **English**., just translate the descriptions, nothing else!

5. When finished, output {completion_delimiter}.

-Examples-
######################

Example 1:

text:
=0 vd=2
    serial=000717ca tos=ff/ff app_list=0 app=0 url_cat=0
    rpdb_link_id=00000000 ngfwid=n/a npu_state=0x4000c00 ofld-O ofld-R
    npu info: flag=0x81/0x81, offload=8/8, ips_offload=0/0, epid=79/78,
    ipid=78/79, vlan=0x0000/0x0064 vlifid=78/79, vtag_in=0x0000/0x0064
    in_npu=2/2, out_npu=2/2, fwd_en=0/0, qid=0/1
3.  Configure the traffic shaping policy to match VLAN CoS 3:

# FortiGate Configuration

body { font-family: Arial, sans-serif
------------------------
output:
("entity"{tuple_delimiter}FORTIGATE{tuple_delimiter}DEVICE{tuple_delimiter}FortiGate is a network security device used for configuring firewall policies, traffic shaping, and user authentication.)
{record_delimiter}
("entity"{tuple_delimiter}VLAN{tuple_delimiter}NETWORK{tuple_delimiter}VLAN (Virtual Local Area Network) is a subnetwork that can group together a collection of devices from different physical LANs.)
{record_delimiter}
("entity"{tuple_delimiter}TRAFFIC SHAPING POLICY{tuple_delimiter}POLICY{tuple_delimiter}Traffic shaping policy is a set of rules that manage the data traffic flow to ensure optimal performance and bandwidth usage.)
{record_delimiter}
("entity"{tuple_delimiter}COS 3{tuple_delimiter}CONFIGURATION{tuple_delimiter}CoS (Class of Service) 3 is a priority level used in traffic shaping to manage the quality of service for network traffic.)
{record_delimiter}
("relationship"{tuple_delimiter}FORTIGATE{tuple_delimiter}TRAFFIC SHAPING POLICY{tuple_delimiter}FortiGate is used to configure the traffic shaping policy for managing network traffic.{tuple_delimiter}8)
{record_delimiter}
("relationship"{tuple_delimiter}TRAFFIC SHAPING POLICY{tuple_delimiter}VLAN{tuple_delimiter}Traffic shaping policy can be applied to VLANs to control the flow of traffic based on their CoS levels.{tuple_delimiter}7)
{record_delimiter}
("relationship"{tuple_delimiter}COS 3{tuple_delimiter}TRAFFIC SHAPING POLICY{tuple_delimiter}CoS 3 is a specific setting within the traffic shaping policy that determines the priority of traffic.{tuple_delimiter}6)
{completion_delimiter}
#############################


Example 2:

text:
 "all" set dstaddr "all" set
srcaddr6 "all"

# Traffic Shaper Configuration

body { font-family: Arial, sans-serif; line-height: 1.6; margin: 20px; }
h1, h2, h3 { color: #333; } pre { background-color: #f4f4f4; padding:
10px; border-left: 3px solid #ccc; overflow-x: auto; } ul { margin: 10px
0; padding-left: 20px; }

# Traffic Shaper Configuration

# 1. Firewall Policy Configuration

set dstaddr6 "all" set schedule "always" set service "ALL" set
logtraffic all next end

# 2. Configure the Traffic Shaper

config firewall shaper traffic-shaper edit "multi-stage-cos-fgtb" set
guaranteed-bandwidth 250 set maximum-bandwidth 1000 set per-policy
------------------------
output:
("entity"{tuple_delimiter}TRAFFIC SHAPER{tuple_delimiter}CONFIGURATION{tuple_delimiter}The Traffic Shaper is a configuration setting that manages bandwidth allocation for network traffic.)
{record_delimiter}
("entity"{tuple_delimiter}FIREWALL POLICY{tuple_delimiter}CONFIGURATION{tuple_delimiter}The Firewall Policy defines rules for allowing or blocking network traffic based on specified criteria.)
{record_delimiter}
("entity"{tuple_delimiter}DSTADDR{tuple_delimiter}CONFIGURATION{tuple_delimiter}Destination address setting used in firewall policies to specify the target address for traffic.)
{record_delimiter}
("entity"{tuple_delimiter}SRCADDR6{tuple_delimiter}CONFIGURATION{tuple_delimiter}Source address setting used in firewall policies to specify the originating address for traffic.)
{record_delimiter}
("entity"{tuple_delimiter}SCHEDULE{tuple_delimiter}CONFIGURATION{tuple_delimiter}Schedule setting that determines when a firewall policy is active.)
{record_delimiter}
("entity"{tuple_delimiter}SERVICE{tuple_delimiter}CONFIGURATION{tuple_delimiter}Service setting that specifies the type of traffic (e.g., HTTP, FTP) that the firewall policy applies to.)
{record_delimiter}
("entity"{tuple_delimiter}LOGTRAFFIC{tuple_delimiter}CONFIGURATION{tuple_delimiter}Logging setting that determines whether traffic logs are generated for the firewall policy.)
{record_delimiter}
("entity"{tuple_delimiter}GUARANTEED BANDWIDTH{tuple_delimiter}CONFIGURATION{tuple_delimiter}Guaranteed bandwidth setting that ensures a minimum amount of bandwidth is allocated to a traffic shaper.)
{record_delimiter}
("entity"{tuple_delimiter}MAXIMUM BANDWIDTH{tuple_delimiter}CONFIGURATION{tuple_delimiter}Maximum bandwidth setting that limits the total bandwidth allocated to a traffic shaper.)
{record_delimiter}
("relationship"{tuple_delimiter}FIREWALL POLICY{tuple_delimiter}DSTADDR{tuple_delimiter}The Firewall Policy uses the Destination Address setting to define the target for traffic rules.{tuple_delimiter}7)
{record_delimiter}
("relationship"{tuple_delimiter}FIREWALL POLICY{tuple_delimiter}SRCADDR6{tuple_delimiter}The Firewall Policy uses the Source Address setting to define the origin for traffic rules.{tuple_delimiter}7)
{record_delimiter}
("relationship"{tuple_delimiter}FIREWALL POLICY{tuple_delimiter}SCHEDULE{tuple_delimiter}The Firewall Policy includes a Schedule setting to determine its active times.{tuple_delimiter}6)
{record_delimiter}
("relationship"{tuple_delimiter}FIREWALL POLICY{tuple_delimiter}SERVICE{tuple_delimiter}The Firewall Policy specifies a Service setting to apply rules to certain types of traffic.{tuple_delimiter}6)
{record_delimiter}
("relationship"{tuple_delimiter}FIREWALL POLICY{tuple_delimiter}LOGTRAFFIC{tuple_delimiter}The Firewall Policy can include a Log Traffic setting to log traffic activity.{tuple_delimiter}5)
{record_delimiter}
("relationship"{tuple_delimiter}TRAFFIC SHAPER{tuple_delimiter}GUARANTEED BANDWIDTH{tuple_delimiter}The Traffic Shaper configuration includes a Guaranteed Bandwidth setting to ensure minimum bandwidth allocation.{tuple_delimiter}8)
{record_delimiter}
("relationship"{tuple_delimiter}TRAFFIC SHAPER{tuple_delimiter}MAXIMUM BANDWIDTH{tuple_delimiter}The Traffic Shaper configuration includes a Maximum Bandwidth setting to limit total bandwidth allocation.{tuple_delimiter}8)
{completion_delimiter}
#############################



-Real Data-
######################
text: {input_text}
######################
output:
